{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAbU,SAACC,GACjBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAQlB,SACE,uBACIO,KAAK,OACLC,MAAQT,EACRU,SArBgB,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,QCLnBG,EAAc,SAAC,GAAsB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAElC,OACI,sBAAKC,UAAU,iDAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,kCAAMA,EAAN,W,uBCLCK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEmCO,UAAWF,GAF9C,+DAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAVvB,kBAgBZY,GAhBY,4CAAH,sDCCPM,EAAU,SAAC,GAAoB,IAAjBb,EAAgB,EAAhBA,SAEvB,ECHwB,SAAEA,GAE1B,MAA0BpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAW,WAEPlB,EAASC,GACJkB,MAAM,SAAAC,GAEHH,EAAS,CACRV,KAAMa,EACNL,SAAS,SAInB,CAACd,IAGGe,EDlB0BK,CAAcpB,GAAlCW,EAAb,EAAQL,KAAaQ,EAArB,EAAqBA,QAErB,OACI,qCAEI,qBAAIlB,UAAU,iDAAd,cAAkEI,EAAlE,OAEEc,GAAW,mBAAGlB,UAAU,4CAAb,qBAGb,qBAAKA,UAAU,YAAf,SAGQe,EAAOH,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eACSA,GAD0CA,EAAIC,aEhBlEW,EAAe,WAGxB,MAAoCzC,mBAAS,CAAC,gBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWd,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MClBlCuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.be0ebac8.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');   \r\n\r\n    const handleImputChange = (e) => {\r\n        setinputValue( e.target.value );\r\n    }\r\n\r\n    const handleSumit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [ inputValue, ...cats, ] );\r\n            setinputValue('');\r\n        }\r\n        \r\n       //console.log('sumit hecho')\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSumit }>\r\n          <input \r\n              type=\"text\"\r\n              value={ inputValue }\r\n              onChange={ handleImputChange }\r\n          />\r\n        </form>\r\n    )\r\n}  \r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__animate__swing\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=XWdbVzVOareVXzbbn2dcRGZEvodXVKRB`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n        \r\n            <h3 className=\"animate__animated animate__animate__rubberBand\"> { category } </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__animate__flash\">loading</p> }\r\n\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem                                 key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                            \r\n                }\r\n\r\n\r\n            </div>\r\n            \r\n \r\n\r\n\r\n            \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () =>{\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n               \r\n                setstate({\r\n                 data: imgs,\r\n                 loading: false\r\n                 })\r\n               \r\n            })\r\n    }, [category])\r\n\r\n       \r\n    return state; // { data[], loading: true };\r\n\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    //const handleAdd = () => {\r\n    //  setcategories( [...categories, 'hunterxhunter'] );\r\n    //    setcategories( cats => [ ...cats, 'hunterxhunter']);\r\n    //}\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid\r\n                            key={ category } \r\n                            category={ category } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </> \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n\n);\n\n"],"sourceRoot":""}